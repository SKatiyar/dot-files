SHELL=/usr/local/bin/bash

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# start iTerm in fullscreen
set -g @continuum-boot-options 'iterm,fullscreen'
# last saved environment is automatically restored when tmux is started.
set -g @continuum-restore 'on'
# tmux is automatically started after the computer/server is turned on.
set -g @continuum-boot 'on'

# Enable focus events. Needed for Vim FocusGained/FocusLost event handling.
set -g focus-events on

# Enable mouse support including pane focusing and selection support.
set -g mouse on
unbind-key -Tcopy-mode-vi MouseDragEnd1Pane
bind-key -Tcopy-mode-vi MouseDown1Pane send -X clear-selection

# Enable UTF-8 support in status bar
set -g status on

# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
# vim colours don't work with -> set -g default-terminal screen-256color,
# Add following to vimrc for colours to work
# - let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
# - let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
# set -g default-terminal screen-256color

# Ensure terminal starts with its own colour scheme (defined below)
# set -g default-terminal "tmux-256color"
# add support for truecolor
# more info here: https://github.com/ninrod/tricks/blob/master/shell/tmux.md#the-standard-way-since-tmux-22
# tmux issue: https://github.com/tmux/tmux/issues/34
# fixed since version 2.2
# credits to github user sunaku: http://github.com/sunaku 
# usage instructions: http://sunaku.github.io/tmux-24bit-color.html#usage
# set-option -ga terminal-overrides ",tmux-256color:Tc"

# fn+<arrow-key> don't work in shell with -> set -g default-terminal xterm-256color
set-window-option -g xterm-keys on

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set -g base-index 1
setw -g pane-base-index 1

# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g status-left '#[fg=colour235,bg=colour252,bold] > #S #[fg=colour252,bg=colour238,nobold] > #(whoami) #[fg=colour238,bg=colour234,nobold]'
set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39] > #[fg=black,bg=colour39,noreverse,bold] #I: #W #[fg=colour39,bg=colour234,nobold]"

# Screen like binding
unbind C-b
set -g prefix C-a
bind a send-prefix

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'

# Patch for OS X pbpaste and pbcopy under tmux.
# Use when unable to copy from vim to other apps.
# set-option -g default-command "reattach-to-user-namespace -l $SHELL"
# enable below if above commented
set-option -g default-shell $SHELL
set-option -g allow-rename off

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
